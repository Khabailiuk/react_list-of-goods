{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","State","isReversed","sortType","NONE","sortGoodsByAlphabet","setState","ALPHABET","sortGoodsByLength","LENGTH","reverseGoods","state","reset","this","reorderedGoods","goods","visibleGoods","sort","iteam1","iteam2","localeCompare","length","reverse","getReorderedGoods","isOrderChanged","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,oBAAsB,WACpB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,kBAAoB,WAClB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,aAAe,WACb,EAAKJ,UAAS,SAAAK,GAAK,MAAK,CACtBT,YAAaS,EAAMT,gBAhBzB,EAoBEU,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCS,KAAKF,MAA9BR,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZY,EAxDH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENc,EAAY,YAAOD,GAEzB,OAAQZ,GACN,KAAKL,EAASS,SACZS,EAAaC,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAOE,cAAcD,MAC3D,MAEF,KAAKrB,EAASW,OACZO,EAAaC,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAOG,OAASF,EAAOE,UAOjE,OAAOnB,EAAac,EAAaM,UAAYN,EAqCpBO,CAAkBxB,EAAiBc,KAAKF,OACzDa,EAAiBtB,GAAcC,IAAaL,EAASM,KAE3D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYxB,IAAaL,EAASS,WAGtCqB,QAASf,KAAKR,oBARhB,iCAaA,wBACEqB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYxB,IAAaL,EAASW,SAGtCmB,QAASf,KAAKL,kBARhB,4BAaA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAazB,IAGjB0B,QAASf,KAAKH,aARhB,qBAaCc,GACC,wBACEE,KAAK,SACLD,UAAWE,IACT,mBACA,CACE,YAA2B,IAAfzB,IAGhB0B,QAASf,KAAKD,MARhB,sBAeJ,6BACE,6BACGE,EAAee,KAAI,SAACC,GAAD,OAClB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBA7FvB,GAAyBC,aCtDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.577319a8.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((iteam1, iteam2) => iteam1.localeCompare(iteam2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((iteam1, iteam2) => iteam1.length - iteam2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component <{}, State> {\n  State: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortGoodsByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortGoodsByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isOrderChanged = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortGoodsByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortGoodsByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {isOrderChanged && (\n            <button\n              type=\"button\"\n              className={classNames(\n                'button is-danger',\n                {\n                  'is-light': isReversed === true,\n                },\n              )}\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map((good) => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}